package Java.opp;
public class Tes1t {
	//int [] arr=new int[10]; //13.A->编译出错，静态方法不能调用不是静态的属性,
	public static void main(String [] args) {
		//int [] arr=new int[10];  //如果放在方法体中，就可以执行，得到默认值0；
		//System.out.println(arr[1]); 		
		//int a=(int) (6.5/7.5*3);//1.B->后面数一定要括号
		//System.out.println(a);
		//long number =345L;
		//long number =0345;		
		//long number =0x345L;	//2.C->十六进制值赋值给long类型
		//long number =0345L;	
		//System.out.println(number);
		//System.out.println(""+'a'+1);  //3.B->a1
		//System.out.println(making());//5.B->2个字符串长度
		//int i=0;boolean re=false; re=((++i)+i==2)?true:false;
		//System.out.println("i="+i+",re="+re);  //6.A		
		//long sizeof instanceof   const    //7.B->sizeof不是关键字
		//String str="420";str+="42";
		//System.out.println(str);	//8.D->42042	
		//int [] arr=new int[8];	//int [] arr=new int[8]{};//10.B->有三种方法
		//int [] arr={};	            //int [] arr=new int[]{};	//		int arr [] ={};//调换位置也可以	 
		//int k=(120-120/100*100)%10; //int k=989/10%10;   
		//System.out.println(k);  15.A ->选取3位数的十位数		
		/*int a[]={0,1,2,3,4};int sum=0; try{for(int i=0;i<6;i++){sum+=a[i];}  //17.D
			System.out.println("求和失败");//捕获异常后就不会执行异常下面的程序
			System.out.println("求和成功");//如果没有异常就好执行这两句打印语句
			}catch(ArrayIndexOutOfBoundsException e){System.out.println("数组下标越界了");			
			}finally{	System.out.println("程序结束了");}System.out.println("程序已经结束了");*/
		//int $中国$=5;
		//System.out.println($中国$);  //3.B->a1
	}
    //public static String making(){  //5题返回字符串H5，两个字符
		//String s="SMTH";s=s+"57";s=s.substring(3,5);s=s.toUpperCase();return s.toString();}
}
/*interface Data{public void load();}  //9.A->因为抽象类和接口的方法名和类型都一样，
abstract class Info{public abstract void load();}
class Em extends Info implements Data{
	public void load(){}}  //所以只要一个方法就可以重写抽象类和实现接口。
	//public void Info.load(){System.out.println("ni");}}*/
/*abstract class AbstractIt{abstract float getFloat();} 
class AbstractItTest extends AbstractIt{
	private float f1=1.0f;private float getFloat(){return f1;}}*///14.C ->getFloat()方法前用public就不报错
package WeiTest.java;
public class Card{
	private String face;
	private String suit;
	public Card(String a,String b){
	suit=a;face=b;
	System.out.print(toString()+"\t");
	}
	public static void main(String[] args){
		String f []={"A","2","3","4","5","6","7","8","9","10","J","Q","K"};
		String s []={"黑桃","红桃","梅花","方块"};
		int n=0;
		String tmp;
		String deck[]=new String[52];
		System.out.println("洗牌前：");
		for (int i=0;i<s.length;i++){
			for (int j=0;j<f.length;j++){
				Card a=new Card(s[i],f[j]);	
				deck[n]=a.toString();
				n++;
			}
		}
		System.out.println("\n"+"洗牌后：");		
		for (int i=0,j=0;i<52;i++,j++){	
			int m=(int)(Math.random()*52);
			System.out.print(deck[m]+"\t");
			tmp=deck[i];
			deck[i]=deck[m];
			deck[m]=tmp;			
		}
	}
	protected String getFace(){
		return face;
	}
	protected String getSuit(){
		return suit;
	}
	public String toString(){
		return suit+face;		
	}
}
public class Test1 {
	static int c=0; //静态变量,类的成员变量
	int d=0;  //实例变量,是对象的成员变量
	public static void main(String[] args) {
    int f=0; //创建在方法内的局部变量 ,在该方法被执行时创建,在使用前必须被初始化
	String a=new String("abc");   a.equals(b)  内容 true
	String b=new String("abc");   a==b;          地址  false
	String c=b;                           c.equals(a)  内容 true       c==b地址 true
	}
}